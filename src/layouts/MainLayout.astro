---
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import ScrollProgressBar from "@/components/ScrollProgressBar.astro";
import TextLoader from "@/components/TextLoader.astro";
import "@/styles/global.css";

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{title}</title>
        <link
            rel="icon"
            href="/Personal-Website/favicon.png"
            type="image/x-icon"
        />
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        />
        <link
            href="https://api.fontshare.com/v2/css?f[]=hind@500&f[]=khand@700,1&display=swap"
            rel="stylesheet"
        />
        <link
            href="https://api.fontshare.com/v2/css?f[]=cabinet-grotesk@400,500&display=swap"
            rel="stylesheet"
        />

        <style>
            /* Hide initial content */
            .content-container {
                opacity: 0;
                transition: opacity 0.5s ease-in-out;
            }

            .content-container.visible {
                opacity: 1;
            }
        </style>
    </head>
    <body>
        <!-- Loading animation component -->
        <TextLoader />

        <!-- Main content (initially hidden) -->
        <div class="content-container" id="contentContainer">
            <Header />
            <ScrollProgressBar />

            <slot />

            <Footer />
        </div>

        <script>
            // Initialize scroll animations after loader is complete
            document.addEventListener("loaderComplete", function () {
                initScrollAnimations();
            });

            // Scroll Animation for Content
            function initScrollAnimations() {
                const animateElements =
                    document.querySelectorAll(".animate-on-scroll");
                const staggerAnimations =
                    document.querySelectorAll(".stagger-animation");

                // Initial check for elements that are already in view on page load
                checkScroll();

                // Check elements on scroll
                window.addEventListener("scroll", () => {
                    checkScroll();
                    updateActiveNavLink();
                });

                function checkScroll() {
                    // For single elements with fade up animation
                    animateElements.forEach((element) => {
                        const elementTop = element.getBoundingClientRect().top;
                        const windowHeight = window.innerHeight;
                        const revealPoint = 150;

                        if (elementTop < windowHeight - revealPoint) {
                            element.classList.add("animated");
                        }
                    });

                    // For staggered animations (cards and icons)
                    staggerAnimations.forEach((container) => {
                        const containerTop =
                            container.getBoundingClientRect().top;
                        const windowHeight = window.innerHeight;
                        const revealPoint = 150;

                        if (containerTop < windowHeight - revealPoint) {
                            container.classList.add("animated");
                        }
                    });
                }

                // Function to update active nav link based on scroll position
                function updateActiveNavLink() {
                    const sections = document.querySelectorAll("section");
                    const navLinks = document.querySelectorAll("nav a");

                    let currentSection = "";

                    sections.forEach((section) => {
                        const sectionTop = section.offsetTop;
                        const sectionHeight = section.clientHeight;
                        const headerHeight =
                            document.querySelector("header")?.offsetHeight || 0;

                        if (
                            window.pageYOffset >=
                            sectionTop - headerHeight - 100
                        ) {
                            currentSection = section.getAttribute("id");
                        }
                    });

                    navLinks.forEach((link) => {
                        link.classList.remove("active");
                        if (
                            link.getAttribute("href") === `#${currentSection}`
                        ) {
                            link.classList.add("active");
                        }
                    });
                }
            }
        </script>
    </body>
</html>